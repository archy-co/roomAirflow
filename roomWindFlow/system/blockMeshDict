/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

backgroundMesh
{
    xMin   0;
    xMax  65;
    yMin   0;
    yMax  40;
    zMin   0;
    zMax  45;

    xCells  26;
    yCells  16;
    zCells  18;
}

convertToMeters 1;

vertices
(
    ($!backgroundMesh/xMin $!backgroundMesh/yMin $!backgroundMesh/zMin) // 0
    ($!backgroundMesh/xMax $!backgroundMesh/yMin $!backgroundMesh/zMin) // 1
    ($!backgroundMesh/xMax $!backgroundMesh/yMax $!backgroundMesh/zMin) // 2
    ($!backgroundMesh/xMin $!backgroundMesh/yMax $!backgroundMesh/zMin) // 3

    ($!backgroundMesh/xMin $!backgroundMesh/yMin $!backgroundMesh/zMax) // 4
    ($!backgroundMesh/xMax $!backgroundMesh/yMin $!backgroundMesh/zMax) // 5
    ($!backgroundMesh/xMax $!backgroundMesh/yMax $!backgroundMesh/zMax) // 6
    ($!backgroundMesh/xMin $!backgroundMesh/yMax $!backgroundMesh/zMax) // 7
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    (
        $!backgroundMesh/xCells
        $!backgroundMesh/yCells
        $!backgroundMesh/zCells
    )
    simpleGrading (1 1 1)
);

boundary
(
    allBoundaries
    {
        type wall;
        faces
        (
            (0 1 2 3)
            (4 5 6 7)
            (1 5 6 2)
            (0 3 7 4)
            (0 4 5 1)
            (3 2 6 7)
        );
    }

    //lowBoundary
    //{
        //type wall;
        //faces
        //(
            //(0 1 2 3)
        //);
    //}

    //topBoundary
    //{
        //type wall;
        //faces
        //(
            //(4 5 6 7)
        //);
    //}

    //backLower
    //{
        //type wall;
        //faces
        //(
            //(1 5 6 2)
        //);
    //}

    //rightWall
    //{
        //type wall;
        //faces
        //(
            //(0 3 7 4)
        //);
    //}

    //backBoundary
    //{
        //type symmetry;
        //faces
        //(
            //(0 4 5 1)
        //);
    //}

    //frontBoundary
    //{
        //type symmetry;
        //faces
        //(
            //(3 2 6 7)
        //);
    //}
);

// ************************************************************************* //
