/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

backgroundMesh
{
    xMin   -10;
    xMax   100;
    yMin   -10;
    yMax   140;
    zMin    -5;
    zMid    25;
    zMax    50;
    xCells  15;
    yCells  15;
    zCells  15;
}

convertToMeters 1;

vertices
(
    ($!backgroundMesh/xMin $!backgroundMesh/yMin $!backgroundMesh/zMin) // 0
    ($!backgroundMesh/xMax $!backgroundMesh/yMin $!backgroundMesh/zMin) // 1
    ($!backgroundMesh/xMax $!backgroundMesh/yMax $!backgroundMesh/zMin) // 2
    ($!backgroundMesh/xMin $!backgroundMesh/yMax $!backgroundMesh/zMin) // 3

    ($!backgroundMesh/xMin $!backgroundMesh/yMin $!backgroundMesh/zMid) // 4
    ($!backgroundMesh/xMax $!backgroundMesh/yMin $!backgroundMesh/zMid) // 5
    ($!backgroundMesh/xMax $!backgroundMesh/yMax $!backgroundMesh/zMid) // 6
    ($!backgroundMesh/xMin $!backgroundMesh/yMax $!backgroundMesh/zMid) // 7

    ($!backgroundMesh/xMin $!backgroundMesh/yMin $!backgroundMesh/zMax) // 8
    ($!backgroundMesh/xMax $!backgroundMesh/yMin $!backgroundMesh/zMax) // 9
    ($!backgroundMesh/xMax $!backgroundMesh/yMax $!backgroundMesh/zMax) // 10
    ($!backgroundMesh/xMin $!backgroundMesh/yMax $!backgroundMesh/zMax) // 11
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    (
        $!backgroundMesh/xCells
        $!backgroundMesh/yCells
        $!backgroundMesh/zCells
    )
    simpleGrading (1 1 1)

    //hex (4 5 6 7 8 9 10 11)
    //(
        //$!backgroundMesh/xCells
        //$!backgroundMesh/yCells
        //$!backgroundMesh/zCells
    //)
    //simpleGrading (1 1 1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 3 7 4)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }


    ground
    {
        type wall;
        faces
        (
            (0 4 5 1)
        );
    }

    frontAndBack
    {
        type symmetry;
        faces
        (
            (0 1 2 3)
            (3 2 6 7)
            (4 7 6 5)
        );
    }

);

// ************************************************************************* //
