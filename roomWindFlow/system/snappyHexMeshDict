/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    room
    {
        type triSurfaceMesh;
        file "COMMA_House_Bedroom.stl"
        name Geometry;
        regions
        {
            // patch name specification 
            // regionNameInSTLfile    {name    patchNameInOpenFOAM;}
            Geometry                {name RoomGeometry;      }
            Air_Conditioner         {name AirCon;            }
            Air_Conditioner_Inlet   {name inlet;             }

            Bed1                    {name Bed1;              }
            Bed1_Delim              {name Bed1_Delim;        }
            Bed2                    {name Bed2;              }

            Door_1_Close            {name Door1_Close;       }
            Door_2_Close            {name Door2_Close;       }
            Door_3_Close            {name Door3_Close;       }

            Floor                   {name Floor;             }
            Roof                    {name Roof;              }

            Window_1                {name Window_1;          }
            Window_2                {name Window_2;          }
            Window_3                {name outlet;            }
        }
    }
};

castellatedMeshControls
{
    // The surface refinement loop might spend lots of iterations refining just a
    // few cells. This setting will cause refinement to stop if <= minimumRefine
    // are selected for refinement. Note: it will at least do one iteration
    // (unless the number of cells to refine is 0)
    minRefinementCells 10;

    features
    (
      //{ file  "Room.eMesh"; level 1; }
    );

    refinementSurfaces
    {
        room
        {
            level (2 2);
            regions
            {
                // surface region refinement 
                // patch type specification
                // stlRegionName     { level (default feature_angle_resolved); patchInfo { type patchType; } }
                inlet     {
                    level (2 2);
                    patchInfo { type inlet;         }
                }
                outlet    {
                    level (2 2);
                    patchInfo { type outlet;        }
                }

                RoomGeometry  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                AirCon  {
                    level (2 2);
                    patchInfo { type wall;          }
                }

                Bed1  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Bed1_Delim  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Bed2  {
                    level (2 2);
                    patchInfo { type wall;          }
                }

                Door_1_Close  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Door_2_Close  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Door_3_Close  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Floor  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Roof  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Window_1  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                Window_2  {
                    level (2 2);
                    patchInfo { type wall;          }
                }
                //Window_3  {
                    //level (2 2);
                    //patchInfo { type wall;          }
                //}

            }
            patchInfo { type wall; }
        }
    }

    refinementRegions
    {
        refinementBox
        {
            mode    inside;
            level   3;
        }
    }

    locationInMesh (5 5 5); // Offset from (0 0 0) to avoid coinciding with face or edge
    nCellsBetweenLevels 3;
}

snapControls
{
    //- Number of patch smoothing iterations before finding correspondence
    //  to surface
    nSmoothPatch 3;

    //- Relative distance for points to be attracted by surface feature point
    //  or edge. True distance is this factor times local
    //  maximum edge length.
    tolerance 2.0;

    //- Number of mesh displacement relaxation iterations.
    nSolveIter 30;

    //- Maximum number of snapping relaxation iterations. Should stop
    //  before upon reaching a correct mesh.
    nRelaxIter 5;
}

addLayersControls
{
    layers
    {
        "CAD.*"
        {
            nSurfaceLayers 2;
        }
    }

    relativeSizes       true;
    expansionRatio      1.2;
    finalLayerThickness 0.5;
    minThickness        1e-3;
}

meshQualityControls
{}

writeFlags
(
    scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-6;

// ************************************************************************* //
